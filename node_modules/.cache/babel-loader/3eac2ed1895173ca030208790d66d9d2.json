{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\Expenses\\\\LeanExpenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./LeanExpenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeanExpenses(props) {\n  _s();\n\n  // Variables to use and redefine the filter year choice\n  const [filteredYear, setFilteredYear] = useState(\"Any\");\n\n  const filterYearHandler = function (yr) {\n    setFilteredYear(yr); // set filteredYear variable to the DDM option chosen\n  }; // Filter the expenses object if needed\n\n\n  const filteredExpenses = props.expenseObj.filter(obj => {\n    // \"Any\" => no filter\n    if (filteredYear === \"Any\") return obj; // Year selected => filter according to it\n\n    return obj.date.getFullYear().toString() === filteredYear;\n  });\n\n  const conditionalJSX = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    conditionalJSX;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      defaultYear: filteredYear,\n      onSelectFilterYear: filterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(obj => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: obj.title,\n      amount: obj.amount,\n      date: obj.date\n    }, obj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeanExpenses, \"QDnzU6Avi46GPwEzz4g5o+oOSUg=\");\n\n_c = LeanExpenses;\nexport default LeanExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeanExpenses\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/Expenses/LeanExpenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","React","useState","LeanExpenses","props","filteredYear","setFilteredYear","filterYearHandler","yr","filteredExpenses","expenseObj","filter","obj","date","getFullYear","toString","conditionalJSX","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMK,iBAAiB,GAAG,UAAUC,EAAV,EAAc;AACtCF,IAAAA,eAAe,CAACE,EAAD,CAAf,CADsC,CACjB;AACtB,GAFD,CAH2B,CAM3B;;;AACA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,UAAN,CAAiBC,MAAjB,CAAyBC,GAAD,IAAS;AACxD;AACA,QAAIP,YAAY,KAAK,KAArB,EAA4B,OAAOO,GAAP,CAF4B,CAGxD;;AACA,WAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,OAAsCV,YAA7C;AACD,GALwB,CAAzB;;AAMA,QAAMW,cAAc,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAGP,gBAAgB,CAACQ,MAAjB,GAAwB,CAA3B,EAA6B;AAC3BD,IAAAA,cAAc;AACf;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,WAAW,EAAEX,YADf;AAEE,MAAA,kBAAkB,EAAEE;AAFtB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALpC,EAMGR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACCR,gBAAgB,CAACS,GAAjB,CAAsBN,GAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,GAAG,CAACO,KAFb;AAGE,MAAA,MAAM,EAAEP,GAAG,CAACQ,MAHd;AAIE,MAAA,IAAI,EAAER,GAAG,CAACC;AAJZ,OACOD,GAAG,CAACS,EADX;AAAA;AAAA;AAAA;AAAA,YADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAnCQlB,Y;;KAAAA,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./LeanExpenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction LeanExpenses(props) {\r\n  // Variables to use and redefine the filter year choice\r\n  const [filteredYear, setFilteredYear] = useState(\"Any\");\r\n  const filterYearHandler = function (yr) {\r\n    setFilteredYear(yr); // set filteredYear variable to the DDM option chosen\r\n  };\r\n  // Filter the expenses object if needed\r\n  const filteredExpenses = props.expenseObj.filter((obj) => {\r\n    // \"Any\" => no filter\r\n    if (filteredYear === \"Any\") return obj;\r\n    // Year selected => filter according to it\r\n    return obj.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  const conditionalJSX= <p>No expenses found</p>\r\n  if(filteredExpenses.length>0){\r\n    conditionalJSX\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        defaultYear={filteredYear}\r\n        onSelectFilterYear={filterYearHandler}\r\n      />\r\n      {filteredExpenses.length === 0 && <p>No expenses found</p>}\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((obj) => (\r\n          <ExpenseItem\r\n            key={obj.id}\r\n            title={obj.title}\r\n            amount={obj.amount}\r\n            date={obj.date}\r\n          />\r\n        ))}\r\n    </Card>\r\n  );\r\n}\r\nexport default LeanExpenses;\r\n"]},"metadata":{},"sourceType":"module"}