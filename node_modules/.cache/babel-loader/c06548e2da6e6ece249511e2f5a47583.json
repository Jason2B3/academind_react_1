{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport LeanExpenses from \"./components/Expenses/LeanExpenses\";\nimport ExpenseForm from \"./components/NewExpense/ExpenseForm\";\nimport ActivateSight from \"./ActivateSight\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: \"e1\",\n  title: \"Toilet Paper\",\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: \"e2\",\n  title: \"New TV\",\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: \"e3\",\n  title: \"Car Insurance\",\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: \"e4\",\n  title: \"New Desk (Wooden)\",\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\n\nfunction App() {\n  _s();\n\n  const saveExpenseDataHandler = function (savedFormData) {\n    //# Use arrow ƒ() syntax to update the DUMMY_EXPENSES object\n    //# useState() && updating state based on previous state\n    setExpenses(prevEntries => {\n      // add the new expense to the start of the array (glitch bait)\n      return [savedFormData, ...prevEntries];\n    });\n  };\n\n  const changeFilterHandler = function (selectedYear) {\n    // Take your changed year and filter the expenses array\n    let zip = expenses.filter(obj => {\n      let entryYear = obj.date.getFullYear;\n      console.log(typeof selectedYear);\n      return entryYear === selectedYear;\n    });\n    console.log(zip);\n  }; // Set up state\n\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LeanExpenses, {\n      onChangeFilter: changeFilterHandler,\n      expenseObj: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActivateSight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vWte2SAXNm+1bDonaLQzZSzOmNc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/App.js"],"names":["LeanExpenses","ExpenseForm","ActivateSight","useState","DUMMY_EXPENSES","id","title","amount","date","Date","App","saveExpenseDataHandler","savedFormData","setExpenses","prevEntries","changeFilterHandler","selectedYear","zip","expenses","filter","obj","entryYear","getFullYear","console","log"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADqB,EAOrB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,QAAnB;AAA6BC,EAAAA,MAAM,EAAE,MAArC;AAA6CC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAnD,CAPqB,EAQrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CARqB,EAcrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAdqB,CAAvB;;AAqBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,sBAAsB,GAAG,UAAUC,aAAV,EAAyB;AACtD;AACA;AAEAC,IAAAA,WAAW,CAAEC,WAAD,IAAiB;AAC3B;AACA,aAAO,CAACF,aAAD,EAAgB,GAAGE,WAAnB,CAAP;AACD,KAHU,CAAX;AAID,GARD;;AASA,QAAMC,mBAAmB,GAAE,UAASC,YAAT,EAAsB;AAC/C;AACA,QAAIC,GAAG,GAAEC,QAAQ,CAACC,MAAT,CAAiBC,GAAD,IAAO;AAC9B,UAAIC,SAAS,GAAED,GAAG,CAACZ,IAAJ,CAASc,WAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOR,YAAnB;AACA,aAAOK,SAAS,KAAKL,YAArB;AACD,KAJQ,CAAT;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,GARD,CAVa,CAoBb;;;AACA,QAAM,CAACC,QAAD,EAAWL,WAAX,IAA0BV,QAAQ,CAACC,cAAD,CAAxC;AACA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEO;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,cAAc,EAAEI,mBAA9B;AAAmD,MAAA,UAAU,EAAEG;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7BQR,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import LeanExpenses from \"./components/Expenses/LeanExpenses\";\r\nimport ExpenseForm from \"./components/NewExpense/ExpenseForm\";\r\nimport ActivateSight from \"./ActivateSight\";\r\nimport { useState } from \"react\";\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\nfunction App() {\r\n  const saveExpenseDataHandler = function (savedFormData) {\r\n    //# Use arrow ƒ() syntax to update the DUMMY_EXPENSES object\r\n    //# useState() && updating state based on previous state\r\n\r\n    setExpenses((prevEntries) => {\r\n      // add the new expense to the start of the array (glitch bait)\r\n      return [savedFormData, ...prevEntries];\r\n    });\r\n  };\r\n  const changeFilterHandler= function(selectedYear){\r\n    // Take your changed year and filter the expenses array\r\n    let zip= expenses.filter((obj)=>{\r\n      let entryYear= obj.date.getFullYear\r\n      console.log(typeof selectedYear)\r\n      return entryYear === selectedYear\r\n    })\r\n    console.log(zip)\r\n  }\r\n\r\n  // Set up state\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n  return (\r\n    <div>\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n      <LeanExpenses onChangeFilter={changeFilterHandler} expenseObj={expenses} />\r\n      <ActivateSight />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}