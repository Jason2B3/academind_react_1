{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // initialize your first destructure variables as an empty string\n  // input fields always output strings, and they start off with nothing entered into them\n\n  const titleChangeHandler = eventObj => {\n    setEnteredTitle(eventObj.target.value);\n  };\n\n  const dateChangeHandler = eventObj => {\n    setEnteredDate(eventObj.target.value);\n  };\n\n  const amountChangeHandler = eventObj => {\n    setEnteredAmount(eventObj.target.value);\n  };\n\n  console.log('START:', enteredTitle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__Actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseForm.js"],"names":["ExpenseForm","enteredTitle","setEnteredTitle","useState","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","eventObj","target","value","dateChangeHandler","amountChangeHandler","console","log"],"mappings":";;;AAAA,OAAO,mBAAP;;;AAEA,SAASA,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCC,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAmCF,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAA+BJ,QAAQ,CAAC,EAAD,CAA7C,CAHqB,CAIrB;AACA;;AACA,QAAMK,kBAAkB,GAAIC,QAAD,IAAa;AACtCP,IAAAA,eAAe,CAACO,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAf;AACD,GAFD;;AAGA,QAAMC,iBAAiB,GAAGH,QAAD,IAAY;AACnCF,IAAAA,cAAc,CAACE,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAd;AACD,GAFD;;AAGA,QAAME,mBAAmB,GAAGJ,QAAD,IAAY;AACrCJ,IAAAA,gBAAgB,CAACI,QAAQ,CAACC,MAAT,CAAgBC,KAAjB,CAAhB;AACD,GAFD;;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBd,YAArB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEO;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,GAAG,EAAC,MAAzB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,QAAQ,EAAEK;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAC,YAAvB;AAAoC,YAAA,GAAG,EAAC,YAAxC;AAAqD,YAAA,QAAQ,EAAED;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAvCQZ,W;;KAAAA,W;AAyCT,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm() {\r\n  const [enteredTitle, setEnteredTitle]= useState('')\r\n  const [enteredAmount, setEnteredAmount]= useState('')\r\n  const [enteredDate, setEnteredDate]= useState('')\r\n  // initialize your first destructure variables as an empty string\r\n  // input fields always output strings, and they start off with nothing entered into them\r\n  const titleChangeHandler = (eventObj)=> {\r\n    setEnteredTitle(eventObj.target.value)\r\n  };\r\n  const dateChangeHandler= (eventObj)=>{\r\n    setEnteredDate(eventObj.target.value)\r\n  }\r\n  const amountChangeHandler= (eventObj)=>{\r\n    setEnteredAmount(eventObj.target.value)\r\n  }\r\n  console.log('START:',enteredTitle)\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" onChange={titleChangeHandler}/>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__Actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}