{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  // PART 1: Set up useState()\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); // PART 2A: Create your onChange event handlers\n\n  const titleChangeHandler = e => setEnteredTitle(e.target.value);\n\n  const dateChangeHandler = e => setEnteredDate(e.target.value);\n\n  const amountChangeHandler = e => setEnteredAmount(e.target.value); // PART 3: Clear input fields after submit\n\n\n  const submitHandler = e => {\n    e.preventDefault(); //prevent pg reload\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    }; // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    console.log(\"expenseData has been submitted!\", expenseData);\n  }; // ---------------------------------------------------\n  // MOST OF JSX IS NOT RELEVANT TO THIS EX.\n  // PAY ATTENTION TO THE <form> and <input> tags with all the event handlers\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler,\n            value: enteredTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler,\n            value: enteredAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler,\n            value: enteredDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__Actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","e","target","value","dateChangeHandler","amountChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CALqB,CAOrB;;AACA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAON,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AACA,QAAME,mBAAmB,GAAIJ,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnD,CAVqB,CAYrB;;;AACA,QAAMG,aAAa,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACM,cAAF,GAD2B,CACP;;AACpB,UAAMC,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAEf,YADW;AAElBgB,MAAAA,MAAM,EAAEd,aAFU;AAGlBe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASd,WAAT;AAHY,KAApB,CAF2B,CAO3B;;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CN,WAA/C;AACD,GAZD,CAbqB,CA0BrB;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEF,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEN,kBAA7B;AAAiD,YAAA,KAAK,EAAEN;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,MAFN;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,QAAQ,EAAEW,mBAJZ;AAKE,YAAA,KAAK,EAAET;AALT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAeE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,GAAG,EAAC,YAFN;AAGE,YAAA,GAAG,EAAC,YAHN;AAIE,YAAA,QAAQ,EAAEQ,iBAJZ;AAKE,YAAA,KAAK,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA2BE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAhEQL,W;;KAAAA,W;AAkET,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ExpenseForm() {\r\n  // PART 1: Set up useState()\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  \r\n  // PART 2A: Create your onChange event handlers\r\n  const titleChangeHandler = (e) => setEnteredTitle(e.target.value);\r\n  const dateChangeHandler = (e) => setEnteredDate(e.target.value);\r\n  const amountChangeHandler = (e) => setEnteredAmount(e.target.value);\r\n    \r\n  // PART 3: Clear input fields after submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevent pg reload\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\r\n    setEnteredTitle(\"\")\r\n    setEnteredAmount(\"\")\r\n    setEnteredDate(\"\")\r\n    console.log(\"expenseData has been submitted!\", expenseData);\r\n  };\r\n  // ---------------------------------------------------\r\n  // MOST OF JSX IS NOT RELEVANT TO THIS EX.\r\n  // PAY ATTENTION TO THE <form> and <input> tags with all the event handlers\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle}/>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n              value={enteredAmount}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n              value={enteredDate}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__Actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}