{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  // PART 1: Set up multiple useState instances by supplying an object arg\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n\n  const titleChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    }); // Set all KVP's to what they were previously via spread operator (to keep all other KVP's intact)\n    // Redefine the KVP for enteredTitle\n    // We use an anon arrow function so Reacrt changes this state immediately (important)\n  };\n\n  const dateChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: event.target.value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler,\n            value: userInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__Actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"d6pWLpJgjJWBnqk3c5PozzZEARk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","e","prevState","event","target","value","dateChangeHandler","amountChangeHandler"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AACzCI,IAAAA,YAAY,EAAE,EAD2B;AAEzCC,IAAAA,aAAa,EAAE,EAF0B;AAGzCC,IAAAA,WAAW,EAAE;AAH4B,GAAD,CAA1C;;AAKA,QAAMC,kBAAkB,GAAKC,CAAD,IAAK;AAC/BL,IAAAA,YAAY,CAAEM,SAAD,IAAc;AACzB,aAAO,EAAC,GAAGA,SAAJ;AAAcL,QAAAA,YAAY,EAACM,KAAK,CAACC,MAAN,CAAaC;AAAxC,OAAP;AACD,KAFW,CAAZ,CAD+B,CAI/B;AACA;AACA;AACD,GAPD;;AASA,QAAMC,iBAAiB,GAAIL,CAAD,IAAO;AAC/BL,IAAAA,YAAY,CAAEM,SAAD,IAAc;AACzB,aAAO,EAAC,GAAGA,SAAJ;AAAcH,QAAAA,WAAW,EAACI,KAAK,CAACC,MAAN,CAAaC;AAAvC,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAKA,QAAME,mBAAmB,GAAIN,CAAD,IAAO;AACjCL,IAAAA,YAAY,CAAEM,SAAD,IAAc;AACzB,aAAO,EAAC,GAAGA,SAAJ;AAAcJ,QAAAA,aAAa,EAACK,KAAK,CAACC,MAAN,CAAaC;AAAzC,OAAP;AACD,KAFW,CAAZ;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEL,kBAA7B;AAAiD,YAAA,KAAK,EAAEL;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,GAAG,EAAC,MAAzB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,QAAQ,EAAEY;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAC,YAAvB;AAAoC,YAAA,GAAG,EAAC,YAAxC;AAAqD,YAAA,QAAQ,EAAED;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAlDQZ,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm() {\r\n  // PART 1: Set up multiple useState instances by supplying an object arg\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n  const titleChangeHandler = ((e)=>{\r\n    setUserInput((prevState)=> {\r\n      return {...prevState,enteredTitle:event.target.value}\r\n    })\r\n    // Set all KVP's to what they were previously via spread operator (to keep all other KVP's intact)\r\n    // Redefine the KVP for enteredTitle\r\n    // We use an anon arrow function so Reacrt changes this state immediately (important)\r\n  })\r\n  \r\n  const dateChangeHandler = (e) => {\r\n    setUserInput((prevState)=> {\r\n      return {...prevState,enteredDate:event.target.value}\r\n    })\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setUserInput((prevState)=> {\r\n      return {...prevState,enteredAmount:event.target.value}\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" onChange={titleChangeHandler} value={userInput}></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__Actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}