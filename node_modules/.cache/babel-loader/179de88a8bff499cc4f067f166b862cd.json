{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseFormOpen.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseFormOpen.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseFormOpen = props => {\n  _s();\n\n  // Event-L PART 1: Set up useState()\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); // Event-L PART 2A: Create your onChange event handlers\n\n  const titleChangeHandler = e => setEnteredTitle(e.target.value);\n\n  const dateChangeHandler = e => setEnteredDate(e.target.value);\n\n  const amountChangeHandler = e => setEnteredAmount(e.target.value); // Event-L PART 3: Clear input fields after submit\n\n\n  const submitHandler = e => {\n    e.preventDefault(); //prevent pg reload\n\n    const expenseData = {\n      id: Math.random().toString(),\n      // add a unique ID\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    }; // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\"); //# DataUp STEP 3: Use your custom attribute's handler function\n\n    props.onSaveExpenseData(expenseData); //# supply the object we just created\n  };\n\n  const onClickHandler2 = function () {\n    setFormOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler,\n          value: enteredTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler,\n          value: enteredAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler,\n          value: enteredDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__Actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandler2,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseFormOpen, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseFormOpen;\nexport default ExpenseFormOpen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseFormOpen\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseFormOpen.js"],"names":["React","useState","ExpenseFormOpen","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","e","target","value","dateChangeHandler","amountChangeHandler","submitHandler","preventDefault","expenseData","id","Math","random","toString","title","amount","date","Date","onSaveExpenseData","onClickHandler2","setFormOpen"],"mappings":"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","sourcesContent":["import \"./ExpenseFormOpen.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst ExpenseFormOpen = (props) => {\r\n  // Event-L PART 1: Set up useState()\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // Event-L PART 2A: Create your onChange event handlers\r\n  const titleChangeHandler = (e) => setEnteredTitle(e.target.value);\r\n  const dateChangeHandler = (e) => setEnteredDate(e.target.value);\r\n  const amountChangeHandler = (e) => setEnteredAmount(e.target.value);\r\n\r\n  // Event-L PART 3: Clear input fields after submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevent pg reload\r\n    const expenseData = {\r\n      id: Math.random().toString(), // add a unique ID\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    //# DataUp STEP 3: Use your custom attribute's handler function\r\n    props.onSaveExpenseData(expenseData); //# supply the object we just created\r\n  };\r\n  const onClickHandler2= function(){\r\n    setFormOpen(false)\r\n  }\r\n  return (\r\n    <form onSubmit={props.submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__Actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n        <button onClick={onClickHandler2}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseFormOpen;\r\n"]},"metadata":{},"sourceType":"module"}