{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  // PART 1: Set up multiple useState instances by supplying an object arg\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n\n  const titleChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: e.target.value\n      };\n    }); // Set all KVP's to what they were previously via spread operator (to keep all other KVP's intact)\n    // Redefine the KVP for enteredTitle\n    // We use an anon arrow function so Reacrt changes this state immediately (important)\n  };\n\n  const dateChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: e.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = e => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: e.target.value\n      };\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); //prevent default pg reload\n\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: userInput.enteredAmount,\n      date: new Date(userInput.enteredDate)\n    }; // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\n\n    setUserInput(() => {\n      return {\n        enteredTitle: \"\",\n        enteredAmount: \"\",\n        enteredDate: \"\"\n      };\n    });\n    console.log(\"expenseData has been submitted!\", expenseData);\n  }; //—————————————————————【】——————————————————————————\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: titleChangeHandler,\n            value: userInput.enteredTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler,\n            value: userInput.enteredAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler,\n            value: userInput.enteredDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__Actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submitHandler,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"d6pWLpJgjJWBnqk3c5PozzZEARk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","e","prevState","target","value","dateChangeHandler","amountChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm() {\r\n  // PART 1: Set up multiple useState instances by supplying an object arg\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n  \r\n  const titleChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: e.target.value };\r\n    });\r\n    // Set all KVP's to what they were previously via spread operator (to keep all other KVP's intact)\r\n    // Redefine the KVP for enteredTitle\r\n    // We use an anon arrow function so Reacrt changes this state immediately (important)\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: e.target.value };\r\n    });\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: e.target.value };\r\n    });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevent default pg reload\r\n    const expenseData = {\r\n      title: userInput.enteredTitle,\r\n      amount: userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n    };\r\n    // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\r\n    setUserInput(() => {\r\n      return { enteredTitle: \"\", enteredAmount: \"\", enteredDate: \"\" };\r\n    });\r\n    console.log(\"expenseData has been submitted!\", expenseData);\r\n  };\r\n  //—————————————————————【】——————————————————————————\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={titleChangeHandler}\r\n              value={userInput.enteredTitle}\r\n            ></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n              value={userInput.enteredAmount}\r\n            ></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n              value={userInput.enteredDate}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__Actions\">\r\n          <button type=\"submit\" onClick={submitHandler}>\r\n            Add Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}