{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  // Event-L PART 1: Set up useState()\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); // Event-L PART 2A: Create your onChange event handlers\n\n  const titleChangeHandler = e => setEnteredTitle(e.target.value);\n\n  const dateChangeHandler = e => setEnteredDate(e.target.value);\n\n  const amountChangeHandler = e => setEnteredAmount(e.target.value); // Event-L PART 3: Clear input fields after submit\n\n\n  const submitHandler = e => {\n    e.preventDefault(); //prevent pg reload\n\n    const expenseData = {\n      id: Math.random().toString(),\n      // add a unique ID\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    }; // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\"); //# DataUp STEP 3: Use your custom attribute's handler function\n\n    props.onSaveExpenseData(expenseData); //# supply the object we just created\n  }; // ---------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: /*#__PURE__*/_jsxDEV(ExpenseFormSub, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","e","target","value","dateChangeHandler","amountChangeHandler","submitHandler","preventDefault","expenseData","id","Math","random","toString","title","amount","date","Date","onSaveExpenseData"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAJ0B,CAM1B;;AACA,QAAMS,kBAAkB,GAAIC,CAAD,IAAON,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AACA,QAAME,mBAAmB,GAAIJ,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnD,CAT0B,CAW1B;;;AACA,QAAMG,aAAa,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACM,cAAF,GAD2B,CACP;;AACpB,UAAMC,WAAW,GAAG;AAClBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADc;AACY;AAC9BC,MAAAA,KAAK,EAAEnB,YAFW;AAGlBoB,MAAAA,MAAM,EAAE,CAAClB,aAHS;AAIlBmB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASlB,WAAT;AAJY,KAApB,CAF2B,CAQ3B;;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd,CAX2B,CAY3B;;AACAN,IAAAA,KAAK,CAACwB,iBAAN,CAAwBT,WAAxB,EAb2B,CAaW;AACvC,GAdD,CAZ0B,CA2B1B;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjCQhB,W;;KAAAA,W;AAmCT,eAAeA,WAAf","sourcesContent":["import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ExpenseForm(props) {\r\n  // Event-L PART 1: Set up useState()\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // Event-L PART 2A: Create your onChange event handlers\r\n  const titleChangeHandler = (e) => setEnteredTitle(e.target.value);\r\n  const dateChangeHandler = (e) => setEnteredDate(e.target.value);\r\n  const amountChangeHandler = (e) => setEnteredAmount(e.target.value);\r\n\r\n  // Event-L PART 3: Clear input fields after submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); //prevent pg reload\r\n    const expenseData = {\r\n      id: Math.random().toString(), // add a unique ID\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    // Set all enteredVars to \"\", which sets the value attributes to \"\" as well\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    //# DataUp STEP 3: Use your custom attribute's handler function\r\n    props.onSaveExpenseData(expenseData); //# supply the object we just created\r\n  };\r\n  // ---------------------------------------------------\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseFormSub />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}