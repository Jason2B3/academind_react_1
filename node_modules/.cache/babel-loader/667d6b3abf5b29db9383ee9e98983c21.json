{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Desktop\\\\acad_react\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChartBar(props) {\n  //% Determine how high to show the thermometer-like chart bar with math\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n\n  const barStylings = {\n    height: barFillHeight,\n    backgroundColor: \"red\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: barStylings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["C:/Users/jason/Desktop/acad_react/src/components/Chart/ChartBar.js"],"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","barStylings","height","backgroundColor","label"],"mappings":";AAAA,OAAO,gBAAP;;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAID,KAAK,CAACE,QAAN,GAAiB,CAArB,EAAwB;AACtBD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACE,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;AACD;;AACD,QAAMI,WAAW,GAAG;AAClBC,IAAAA,MAAM,EAAEN,aADU;AAElBO,IAAAA,eAAe,EAAE;AAFC,GAApB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCN,KAAK,CAACS;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAlBQV,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  //% Determine how high to show the thermometer-like chart bar with math\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  const barStylings = {\r\n    height: barFillHeight,\r\n    backgroundColor: \"red\",\r\n  };\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={barStylings}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ChartBar;\r\n"]},"metadata":{},"sourceType":"module"}